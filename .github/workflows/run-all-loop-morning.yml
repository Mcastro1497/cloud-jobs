name: CER+TIR loop (10:30–13:30 ART)

on:
  schedule:
    - cron: '30 13 * * *'   # 10:30 Argentina (UTC=13:30)
  workflow_dispatch:
    inputs:
      interval_sec:
        description: "Segundos entre corridas"
        required: true
        default: "60"

concurrency:
  group: cer-tir-loop-morning
  cancel-in-progress: true

jobs:
  loop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: pip install --no-cache-dir -r requirements.txt

      - name: Run CER+TIR in loop (morning)
        shell: bash
        env:
          TZ: America/Argentina/Cordoba
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SERVICE_KEY: ${{ secrets.SERVICE_KEY }}
          ECO_USER: ${{ secrets.ECO_USER }}
          ECO_PASS: ${{ secrets.ECO_PASS }}
          ECO_ACCT: ${{ secrets.ECO_ACCT }}
          DEFAULT_SEG: ${{ secrets.DEFAULT_SEG }}
          PUSH_INTERVAL_SEC: ${{ secrets.PUSH_INTERVAL_SEC }}
          INTERVAL_SEC: ${{ github.event.inputs.interval_sec }}
        run: |
          set -e
          : "${INTERVAL_SEC:=60}"
          echo "Loop interval: ${INTERVAL_SEC}s"
          timeout 10800s bash -c '
            while true; do
              echo ">>> $(date -u +"%Y-%m-%dT%H:%M:%SZ") running: python -m src run-all"
              if ! python -m src run-all; then
                echo "run-all falló, sigo en el próximo ciclo..."
              fi
              sleep '"${INTERVAL_SEC}"'
            done
          ' || code=$?
          if [[ "${code:-0}" -eq 124 ]]; then
            echo "Finalizó por timeout esperado (3h). OK."
            exit 0
          else
            exit "${code:-0}"
          fi
