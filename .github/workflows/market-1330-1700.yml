name: "Prices-CER-TIR 13:30-17:00 AR (cada 2m)"

on:
  # 13:30 AR = 16:30 UTC
  schedule:
    - cron: "30 16 * * *"
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 230   # 3.5h + margen
    env:
      # ── tus variables (ajusta nombres si hace falta) ──
      LOCAL_TZ: America/Argentina/Cordoba
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SERVICE_KEY:  ${{ secrets.SERVICE_KEY }}
      ECO_USER:     ${{ secrets.ECO_USER }}
      ECO_PASS:     ${{ secrets.ECO_PASS }}
      ECO_ACCT:     ${{ secrets.ECO_ACCT }}
      DEFAULT_SEGMENT: 24hs
      PUSH_INTERVAL_SEC: "10"
      PRINT_UPDATES: "0"
      VERBOSE: "0"
      # cuánto dejar correr Precios_v4 antes de cortarlo
      PRICES_TTL_SEC: "10"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps
        run: |
          pip install -r requirements.txt

      - name: Loop 2/min (13:30–17:00 AR)
        shell: bash
        run: |
          set -euo pipefail
          CYCLE_SEC=120
          PRICES_TTL="${PRICES_TTL_SEC:-10}s"

          # Fin del día de hoy 17:00 AR (= 20:00 UTC)
          END_UTC=$(date -u -d 'today 20:00' +%s)
          NOW=$(date -u +%s)
          if [ "$NOW" -ge "$END_UTC" ]; then
            echo "Ya pasó el horario de fin (20:00 UTC). Saliendo."
            exit 0
          fi

          while : ; do
            LOOP_START=$(date +%s)
            echo "[RUN][$(date -u '+%F %T UTC')] ciclo cada 2m"

            # 1) Precios: correr N segundos y cortar
            timeout -k 5s "$PRICES_TTL" python Precios_v4.py || true

            # 2) CER: ejecutar once()
            python -c "import runpy; ns=runpy.run_path('Cer_v2.py'); f=ns.get('once'); print('[RUN] Cer_v2 once()->', int(f() if callable(f) else 0))"

            # 3) TIR: ejecutar once()
            python -c "import runpy; ns=runpy.run_path('TIR_v3.py'); f=ns.get('once'); print('[RUN] TIR_v3 once()->', int(f() if callable(f) else 0))"

            NOW=$(date -u +%s)
            # ¿Nos pasamos del fin?
            if [ "$NOW" -ge "$END_UTC" ]; then
              echo "Llegó el fin de ventana (17:00 AR)."
              break
            fi

            # dormir lo que falte para completar 120s
            ELAPSED=$(( NOW - LOOP_START ))
            REM=$(( CYCLE_SEC - ELAPSED ))
            if [ $REM -gt 0 ]; then sleep $REM; fi
          done
